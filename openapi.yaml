openapi: 3.0.3
info:
  title: SWAssistant Backend
  version: v0.1.0
components:
  schemas:
    Editable:
      type: object
      description: Fields on editables so they can use this Backend
      properties:
        _id:
          type: string
        owner:
          type: string
          description: ID of the user
        perm:
          type: array
          items:
            $ref: "#/components/schemas/EditablePerm"
    EditablePerm:
      type: object
      description: Permissions for an editable
      properties:
        name:
          type: string
          description: Username or Room UUID 
        room:
          type: boolean
          description: Is this a reference to a room (as opposed to a user)
        write:
          type: boolean
          description: Can this user (or users in this room) make edits to this editable. If false, users are RO.
    RoomInv:
      type: object
      description: A room invited
      properties:
        _id:
          type: string
        name:
          type: string
        owner:
          type: string
          description: Username of owner
    Room:
      type: object
      description: A room of shared editables
      properties:
        _id:
          type: string
          description: UUID of room
        name:
          type: string
        owner:
          type: string
          description: Username of owner
        users:
          type: array
          description: Usernames of users
          items:
            type: string
        invites:
          type: array
          description: Sent invites.
          items:
            type: string
        declined:
          type: array
          description: Declined invites.
          items:
            type: string
        editables:
          type: array
          description: Editable UUIDs that are in this room.
          items:
            type: string
  parameters:
    Key:
      name: key
      description: API Key
      required: true
      in: query
      schema:
        type: string
    Token:
      name: token
      description: User access token
      required: true
      in: query
      schema:
        type: string
paths:
  /editable/{uuid}:
    post:
      description: Upload a new or update an existing editable
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Editable successfully updated
        '201':
          description: Editable successfully created
        '204':
          description: Invalid UUID
    delete:
      description: Delete an editable
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted
        '204':
          description: Invalid UUID
    get:
      description: Get an editable
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Returns the editable requested.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Editable"
        '204':
          description: Invalid UUID
  /rooms:
    description: List of rooms you have access to
    get:
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
      responses:
        '200':
          description: TODO
  /rooms/invites:
    description: List of room invites.
    get:
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
      responses:
        '200':
          description: List of rooms you are invited to.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomInv"
  /rooms/invites/{uuid}:
    description: Accept or refuse an invite
    post:
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
        - name: accept
          in: query
          required: true
          schema:
            type: boolean
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Room invite accepted or refused.
  /rooms/create:
    description: Create a new room
    post:
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
      responses:
        '201':
          description: Room created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
  /rooms/{uuid}:
    description: Get info about a room
    get:
      parameters:
        - $ref: "#/components/parameters/Key"
        - $ref: "#/components/parameters/Token"
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Returns info about room
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
                